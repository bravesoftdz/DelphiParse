unit TestQuery;

interface

uses
  TestFramework, DelphiParse.Query;
type
  TTestQuery = class(TTestCase)
  private
    Query: TParseQuery;
  public
    procedure SetUp; override;
    procedure TearDown; override;
  published
    procedure AdicionarUmParametro;
    procedure AdicionarDoisParametros;
    procedure AdicionarParametroJaExistente;
    procedure TestClausulaStartsWith;

    procedure FormatarComUmParametro;
    procedure FormatarComDoisParametros;
    procedure FormatarEqualToComStartsWith;

  end;

implementation

uses System.SysUtils;

{ TTestQuery }
procedure TTestQuery.SetUp;
begin
  inherited;
  Query := TParseQuery.Create;
end;

procedure TTestQuery.TearDown;
begin
  inherited;
  Query.Free;
end;

procedure TTestQuery.AdicionarDoisParametros;
begin
  Query.WhereEqualToAdd('username', 'luiz');
  Query.WhereEqualToAdd('city', 'São Paulo');
  CheckTrue(Query.Count = 2, 'Não contém dois elementos');
end;

procedure TTestQuery.AdicionarParametroJaExistente;
begin
  StartExpectingException(Exception);
  Query.WhereEqualToAdd('username', 'luiz');
  Query.WhereEqualToAdd('city', 'Sao Paulo');
  Query.WhereEqualToAdd('username', 'paulo');
  StopExpectingException('Não gerou a exception esperada');
end;

procedure TTestQuery.AdicionarUmParametro;
begin
  Query.WhereEqualToAdd('username', 'luiz');
  CheckTrue(Query.Count > 0, 'Adicionado item, porém parametros vazio');
end;

procedure TTestQuery.FormatarComDoisParametros;
begin
  Query.WhereEqualToAdd('username','luiz');
  Query.WhereEqualToAdd('city','São Paulo');
  CheckEqualsString('where={"city":"São Paulo","username":"luiz"}', Query.GetParamsFormatted);
end;

procedure TTestQuery.FormatarEqualToComStartsWith;
begin
  Query.WhereStartsWith('username','lu');
  Query.WhereEqualToAdd('city','São Paulo');
  CheckEqualsString('where={"city":"São Paulo","username":{"$regex":"^lu"}}',
    Query.GetParamsFormatted);
end;

procedure TTestQuery.FormatarComUmParametro;
begin
  Query.WhereEqualToAdd('username','luiz');
  CheckEqualsString('where={"username":"luiz"}', Query.GetParamsFormatted);
end;

procedure TTestQuery.TestClausulaStartsWith;
begin
  Query.WhereStartsWith('username','lu');
  Check(Query.Count = 1, 'Não adicionou parâmetro utilizando WhereStartsWith');
  CheckEqualsString('where={"username":{"$regex":"^lu"}}', Query.GetParamsFormatted);
end;

initialization
RegisterTest(TTestQuery.Suite);

end.
